
CL-USER 1 > (apply '+ '())
0

CL-USER 2 > (f '( 5 6 7 (8 9 10 (11 12 13)) (14 15 16)))
(5)

CL-USER 3 > 
(f1 '( 5 6 7 (8 9 10 (11 12 13)) (14 15 16)))
(5)

CL-USER 4 > (f '( (5 6 7) (8 9 10 (11 12 13)) (14 15 16)))

Error: 14 is not of type LIST.
  1 (abort) Return to level 0.
  2 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 5 : 1 > (f '((5 6 7) (8 9 10 (11 12 13)) (14 15 16)))

Error: 14 is not of type LIST.
  1 (abort) Return to level 1.
  2 Return to debug level 1.
  3 Return to level 0.
  4 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 6 : 2 > (f '((5 6 7)(8 9 10 (11 12 13)) (14 15 16)))

Error: 14 is not of type LIST.
  1 (abort) Return to level 2.
  2 Return to debug level 2.
  3 Return to level 1.
  4 Return to debug level 1.
  5 Return to level 0.
  6 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 7 : 3 > (f '((5 6 7)(8 9 10 (11 12 13)) ((14 15 16))))

Error: 14 is not of type LIST.
  1 (abort) Return to level 3.
  2 Return to debug level 3.
  3 Return to level 2.
  4 Return to debug level 2.
  5 Return to level 1.
  6 Return to debug level 1.
  7 Return to level 0.
  8 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 8 : 4 > (f '((4 5 6) (7 8 9)))

Error: 7 is not of type LIST.
   1 (abort) Return to level 4.
   2 Return to debug level 4.
   3 Return to level 3.
   4 Return to debug level 3.
   5 Return to level 2.
   6 Return to debug level 2.
   7 Return to level 1.
   8 Return to debug level 1.
   9 Return to level 0.
  10 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 9 : 5 > (f '((4 5 6 7 8 9)))
(4 . 4)

CL-USER 10 : 5 > 