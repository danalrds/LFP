
CL-USER 1 > (f '(1 2 3(4 5 6 (88)) (8 7 6)))

Error: Cannot take CAR of 1.
  1 (abort) Return to level 0.
  2 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 2 : 1 > (f '((1 2 3)(4 5 6 (88)) (8 7 6)))

Error: Cannot take CAR of 1.
  1 (abort) Return to level 1.
  2 Return to debug level 1.
  3 Return to level 0.
  4 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 3 : 2 > (f '((1 2 3)(4 5 6 (88)) (8 7 6)))

Error: Cannot take CAR of 1.
  1 (abort) Return to level 2.
  2 Return to debug level 2.
  3 Return to level 1.
  4 Return to debug level 1.
  5 Return to level 0.
  6 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 4 : 3 > (f '((1 2)))

Error: Cannot take CAR of 1.
  1 (abort) Return to level 3.
  2 Return to debug level 3.
  3 Return to level 2.
  4 Return to debug level 2.
  5 Return to level 1.
  6 Return to debug level 1.
  7 Return to level 0.
  8 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 5 : 4 > (f '((1 2 3)(4 5 6 (88)) (8 7 6)))

Error: Cannot take CAR of 1.
   1 (abort) Return to level 4.
   2 Return to debug level 4.
   3 Return to level 3.
   4 Return to debug level 3.
   5 Return to level 2.
   6 Return to debug level 2.
   7 Return to level 1.
   8 Return to debug level 1.
   9 Return to level 0.
  10 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 6 : 5 > (ff '((1 2 3)(4 5 6 (88)) (8 7 6)))

Error: Cannot take CAR of 1.
   1 (abort) Return to level 5.
   2 Return to debug level 5.
   3 Return to level 4.
   4 Return to debug level 4.
   5 Return to level 3.
   6 Return to debug level 3.
   7 Return to level 2.
   8 Return to debug level 2.
   9 Return to level 1.
  10 Return to debug level 1.
  11 Return to level 0.
  12 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 7 : 6 > (rev '(1 2 3 (4 5 9 (9 7))) (2 3))

Error: Illegal argument in functor position: 2 in (2 3).
   1 (continue) Evaluate 2 and ignore the rest.
   2 (abort) Return to level 6.
   3 Return to debug level 6.
   4 Return to level 5.
   5 Return to debug level 5.
   6 Return to level 4.
   7 Return to debug level 4.
   8 Return to level 3.
   9 Return to debug level 3.
  10 Return to level 2.
  11 Return to debug level 2.
  12 Return to level 1.
  13 Return to debug level 1.
  14 Return to level 0.
  15 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 8 : 7 > (rev '(1 2 3 (4 5 9 (9 7)) (2 3)))

Error: 1 is not of type SEQUENCE.
   1 (abort) Return to level 7.
   2 Return to debug level 7.
   3 Evaluate 2 and ignore the rest.
   4 Return to level 6.
   5 Return to debug level 6.
   6 Return to level 5.
   7 Return to debug level 5.
   8 Return to level 4.
   9 Return to debug level 4.
  10 Return to level 3.
  11 Return to debug level 3.
  12 Return to level 2.
  13 Return to debug level 2.
  14 Return to level 1.
  15 Return to debug level 1.
  16 Return to level 0.
  17 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 9 : 8 > (rev '(1 2 3 (4 5 9 (9 7)) (2 3)))

CL-USER 11 > (rev '(1 2 3 (4 5 9 (9 7)) (2 3)))
((3 2) ((7 9) 9 5 4) 3 2 1)

CL-USER 12 > 